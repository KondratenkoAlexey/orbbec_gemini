from ultralytics import YOLO
import os
import glob


def convert_models_to_onnx(folder_path='.', overwrite=False, specific_models=None):
    """
    –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –º–æ–¥–µ–ª–∏ YOLO –≤ –ø–∞–ø–∫–µ –≤ —Ñ–æ—Ä–º–∞—Ç ONNX.

    Args:
        folder_path (str): –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –º–æ–¥–µ–ª—è–º–∏
        overwrite (bool): –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ ONNX —Ñ–∞–π–ª—ã
        specific_models (list): –°–ø–∏—Å–æ–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
    """

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã –∏—Å–∫–∞—Ç—å
    if specific_models:
        model_files = [os.path.join(folder_path, f"{model}.pt") for model in specific_models]
    else:
        file_patterns = ['yolo*.pt', 'yolov*.pt']
        model_files = []
        for pattern in file_patterns:
            model_files.extend(glob.glob(os.path.join(folder_path, pattern)))
        model_files = sorted(set(model_files))

    print(f"–ù–∞–π–¥–µ–Ω–æ –º–æ–¥–µ–ª–µ–π –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {len(model_files)}")

    successful = 0
    skipped = 0
    failed = 0

    for model_path in model_files:
        try:
            if not os.path.exists(model_path):
                print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {model_path}")
                failed += 1
                continue

            base_name = os.path.splitext(model_path)[0]
            onnx_path = f"{base_name}.onnx"

            if os.path.exists(onnx_path) and not overwrite:
                print(f"‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç): {onnx_path}")
                skipped += 1
                continue

            print(f"\nüîß –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º: {os.path.basename(model_path)}")
            model = YOLO(model_path)
            model.export(format='onnx')

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–ª—Å—è
            if os.path.exists(onnx_path):
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {os.path.basename(onnx_path)}")
                successful += 1
            else:
                print(f"‚ö†Ô∏è  –§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω: {onnx_path}")
                failed += 1

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å {os.path.basename(model_path)}: {e}")
            failed += 1
            continue

    print(f"{'=' * 60}\n"
          f"üìä –ò–¢–û–ì–ò –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò:\n"
          f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ: {successful}\n"
          f"   ‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped}\n"
          f"   ‚ùå –û—à–∏–±–æ–∫: {failed}\n"
          f"   üìÅ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {successful + skipped + failed}"
          )


if __name__ == "__main__":
    # –í–∞—Ä–∏–∞–Ω—Ç 1: –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –º–æ–¥–µ–ª–∏ –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
    convert_models_to_onnx(folder_path='./YOLO')

    # –í–∞—Ä–∏–∞–Ω—Ç 2: –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
    # convert_models_to_onnx(overwrite=True)

    # –í–∞—Ä–∏–∞–Ω—Ç 3: –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏
    # convert_models_to_onnx(specific_models=['yolo11n', 'yolo11s'])
